It is a behavioural design pattern that defines the skeleton of algorithm in the superclass but lets you subclasses override specific steps of the algorithm without changing its structure.

Template Desing pattern is used when you have a set of steps that need to be followed in a particular orders, but the implementations of some of the steps may vary, 
Pattern defines the skeleton of algorithm, in a method, deferring some steps to subclasses.

EXample
1)Beverage --> abstract class has boilWater(), brew(), pourInCup(), addCondiments();
2)Coffe-->template1
3)tea -->template2